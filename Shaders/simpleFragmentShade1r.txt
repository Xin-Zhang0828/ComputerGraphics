#version 330

in vec3 position_eye, normal_eye;

out vec4 frag_colour;
uniform mat4 view;

// L:fixed point light properties//K:surface reflectance
vec3 lightpos_world  = vec3 (-25.0, 5.0, 5.0);
vec3 Lspecular = vec3 (1.0, 1.0, 1.0);  vec3 Kspecular = vec3 (1.0, 1.0, 1.0); 
vec3 Ldiffuse = vec3 (0.5, 0.5, 0.5); vec3 Kdiffuse = vec3 (0.0, 1.0, 1.0); 
//vec3 Lambient = vec3 (0.2, 0.2, 0.2); vec3 Kambient = vec3 (1.0, 1.0, 1.0); 
float specular_exponent = 50.0;

void main(){
	//vec3 ambient = Lambient * Kambient; // ambient intensity
	vec3 normal=normalize(normal_eye);

	vec3 lightpos_eye = vec3 (view * vec4 (lightpos_world, 1.0));
	vec3 lightdir_eye = normalize ( lightpos_eye - position_eye);
	float dot_prod = max (dot (lightdir_eye, normal), 0.0);
	dot_prod=floor(dot_prod*4)/4+0.25;
	vec3 diffuse = Ldiffuse * Kdiffuse * dot_prod; 	// diffuse intensity
	
	vec3 surface_eye = normalize (-position_eye);
	vec3 half_eye = normalize (surface_eye + lightdir_eye);
	float dot_specular = max (dot (half_eye, normal), 0.0);
	float specular_factor = pow (dot_specular, specular_exponent);
	specular_factor=step(0.3,specular_factor);
	vec3 specular = Lspecular * Kspecular * specular_factor; 	// specular intensity
	frag_colour = vec4 (specular + diffuse , 1.0);
}